// source: training_daemon.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');
goog.object.extend(proto, google_protobuf_descriptor_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var training_v2_pb = require('./training_v2_pb.js');
goog.object.extend(proto, training_v2_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.training_daemon.AllModelsRequest', null, global);
goog.exportSymbol('proto.training_daemon.AuthValidateRequest', null, global);
goog.exportSymbol('proto.training_daemon.AuthorizationDetails', null, global);
goog.exportSymbol('proto.training_daemon.CommonRequest', null, global);
goog.exportSymbol('proto.training_daemon.MethodMetadata', null, global);
goog.exportSymbol('proto.training_daemon.MethodMetadataRequest', null, global);
goog.exportSymbol('proto.training_daemon.ModelsResponse', null, global);
goog.exportSymbol('proto.training_daemon.NewModelRequest', null, global);
goog.exportSymbol('proto.training_daemon.TrainingMetadata', null, global);
goog.exportSymbol('proto.training_daemon.UpdateModelRequest', null, global);
goog.exportSymbol('proto.training_daemon.UploadAndValidateRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.training_daemon.AuthorizationDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.training_daemon.AuthorizationDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.training_daemon.AuthorizationDetails.displayName = 'proto.training_daemon.AuthorizationDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.training_daemon.NewModelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.training_daemon.NewModelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.training_daemon.NewModelRequest.displayName = 'proto.training_daemon.NewModelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.training_daemon.AuthValidateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.training_daemon.AuthValidateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.training_daemon.AuthValidateRequest.displayName = 'proto.training_daemon.AuthValidateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.training_daemon.UploadAndValidateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.training_daemon.UploadAndValidateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.training_daemon.UploadAndValidateRequest.displayName = 'proto.training_daemon.UploadAndValidateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.training_daemon.CommonRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.training_daemon.CommonRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.training_daemon.CommonRequest.displayName = 'proto.training_daemon.CommonRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.training_daemon.UpdateModelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.training_daemon.UpdateModelRequest.repeatedFields_, null);
};
goog.inherits(proto.training_daemon.UpdateModelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.training_daemon.UpdateModelRequest.displayName = 'proto.training_daemon.UpdateModelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.training_daemon.ModelsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.training_daemon.ModelsResponse.repeatedFields_, null);
};
goog.inherits(proto.training_daemon.ModelsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.training_daemon.ModelsResponse.displayName = 'proto.training_daemon.ModelsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.training_daemon.MethodMetadataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.training_daemon.MethodMetadataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.training_daemon.MethodMetadataRequest.displayName = 'proto.training_daemon.MethodMetadataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.training_daemon.AllModelsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.training_daemon.AllModelsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.training_daemon.AllModelsRequest.displayName = 'proto.training_daemon.AllModelsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.training_daemon.TrainingMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.training_daemon.TrainingMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.training_daemon.TrainingMetadata.displayName = 'proto.training_daemon.TrainingMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.training_daemon.MethodMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.training_daemon.MethodMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.training_daemon.MethodMetadata.displayName = 'proto.training_daemon.MethodMetadata';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.training_daemon.AuthorizationDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.training_daemon.AuthorizationDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.training_daemon.AuthorizationDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.AuthorizationDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentBlock: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    signature: msg.getSignature_asB64(),
    signerAddress: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.training_daemon.AuthorizationDetails}
 */
proto.training_daemon.AuthorizationDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.training_daemon.AuthorizationDetails;
  return proto.training_daemon.AuthorizationDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.training_daemon.AuthorizationDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.training_daemon.AuthorizationDetails}
 */
proto.training_daemon.AuthorizationDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCurrentBlock(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignerAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.training_daemon.AuthorizationDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.training_daemon.AuthorizationDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.training_daemon.AuthorizationDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.AuthorizationDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentBlock();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSignerAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint64 current_block = 1;
 * @return {number}
 */
proto.training_daemon.AuthorizationDetails.prototype.getCurrentBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.training_daemon.AuthorizationDetails} returns this
 */
proto.training_daemon.AuthorizationDetails.prototype.setCurrentBlock = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.training_daemon.AuthorizationDetails.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.training_daemon.AuthorizationDetails} returns this
 */
proto.training_daemon.AuthorizationDetails.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes signature = 3;
 * @return {!(string|Uint8Array)}
 */
proto.training_daemon.AuthorizationDetails.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes signature = 3;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.training_daemon.AuthorizationDetails.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.training_daemon.AuthorizationDetails.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.training_daemon.AuthorizationDetails} returns this
 */
proto.training_daemon.AuthorizationDetails.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string signer_address = 4;
 * @return {string}
 */
proto.training_daemon.AuthorizationDetails.prototype.getSignerAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.training_daemon.AuthorizationDetails} returns this
 */
proto.training_daemon.AuthorizationDetails.prototype.setSignerAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.training_daemon.NewModelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.training_daemon.NewModelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.training_daemon.NewModelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.NewModelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorization: (f = msg.getAuthorization()) && proto.training_daemon.AuthorizationDetails.toObject(includeInstance, f),
    model: (f = msg.getModel()) && training_v2_pb.NewModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.training_daemon.NewModelRequest}
 */
proto.training_daemon.NewModelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.training_daemon.NewModelRequest;
  return proto.training_daemon.NewModelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.training_daemon.NewModelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.training_daemon.NewModelRequest}
 */
proto.training_daemon.NewModelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.training_daemon.AuthorizationDetails;
      reader.readMessage(value,proto.training_daemon.AuthorizationDetails.deserializeBinaryFromReader);
      msg.setAuthorization(value);
      break;
    case 2:
      var value = new training_v2_pb.NewModel;
      reader.readMessage(value,training_v2_pb.NewModel.deserializeBinaryFromReader);
      msg.setModel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.training_daemon.NewModelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.training_daemon.NewModelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.training_daemon.NewModelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.NewModelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorization();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.training_daemon.AuthorizationDetails.serializeBinaryToWriter
    );
  }
  f = message.getModel();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      training_v2_pb.NewModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthorizationDetails authorization = 1;
 * @return {?proto.training_daemon.AuthorizationDetails}
 */
proto.training_daemon.NewModelRequest.prototype.getAuthorization = function() {
  return /** @type{?proto.training_daemon.AuthorizationDetails} */ (
    jspb.Message.getWrapperField(this, proto.training_daemon.AuthorizationDetails, 1));
};


/**
 * @param {?proto.training_daemon.AuthorizationDetails|undefined} value
 * @return {!proto.training_daemon.NewModelRequest} returns this
*/
proto.training_daemon.NewModelRequest.prototype.setAuthorization = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.training_daemon.NewModelRequest} returns this
 */
proto.training_daemon.NewModelRequest.prototype.clearAuthorization = function() {
  return this.setAuthorization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.training_daemon.NewModelRequest.prototype.hasAuthorization = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional trainingV2.NewModel model = 2;
 * @return {?proto.trainingV2.NewModel}
 */
proto.training_daemon.NewModelRequest.prototype.getModel = function() {
  return /** @type{?proto.trainingV2.NewModel} */ (
    jspb.Message.getWrapperField(this, training_v2_pb.NewModel, 2));
};


/**
 * @param {?proto.trainingV2.NewModel|undefined} value
 * @return {!proto.training_daemon.NewModelRequest} returns this
*/
proto.training_daemon.NewModelRequest.prototype.setModel = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.training_daemon.NewModelRequest} returns this
 */
proto.training_daemon.NewModelRequest.prototype.clearModel = function() {
  return this.setModel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.training_daemon.NewModelRequest.prototype.hasModel = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.training_daemon.AuthValidateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.training_daemon.AuthValidateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.training_daemon.AuthValidateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.AuthValidateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorization: (f = msg.getAuthorization()) && proto.training_daemon.AuthorizationDetails.toObject(includeInstance, f),
    modelId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    trainingDataLink: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.training_daemon.AuthValidateRequest}
 */
proto.training_daemon.AuthValidateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.training_daemon.AuthValidateRequest;
  return proto.training_daemon.AuthValidateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.training_daemon.AuthValidateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.training_daemon.AuthValidateRequest}
 */
proto.training_daemon.AuthValidateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.training_daemon.AuthorizationDetails;
      reader.readMessage(value,proto.training_daemon.AuthorizationDetails.deserializeBinaryFromReader);
      msg.setAuthorization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrainingDataLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.training_daemon.AuthValidateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.training_daemon.AuthValidateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.training_daemon.AuthValidateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.AuthValidateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorization();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.training_daemon.AuthorizationDetails.serializeBinaryToWriter
    );
  }
  f = message.getModelId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTrainingDataLink();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional AuthorizationDetails authorization = 1;
 * @return {?proto.training_daemon.AuthorizationDetails}
 */
proto.training_daemon.AuthValidateRequest.prototype.getAuthorization = function() {
  return /** @type{?proto.training_daemon.AuthorizationDetails} */ (
    jspb.Message.getWrapperField(this, proto.training_daemon.AuthorizationDetails, 1));
};


/**
 * @param {?proto.training_daemon.AuthorizationDetails|undefined} value
 * @return {!proto.training_daemon.AuthValidateRequest} returns this
*/
proto.training_daemon.AuthValidateRequest.prototype.setAuthorization = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.training_daemon.AuthValidateRequest} returns this
 */
proto.training_daemon.AuthValidateRequest.prototype.clearAuthorization = function() {
  return this.setAuthorization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.training_daemon.AuthValidateRequest.prototype.hasAuthorization = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string model_id = 2;
 * @return {string}
 */
proto.training_daemon.AuthValidateRequest.prototype.getModelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.training_daemon.AuthValidateRequest} returns this
 */
proto.training_daemon.AuthValidateRequest.prototype.setModelId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string training_data_link = 3;
 * @return {string}
 */
proto.training_daemon.AuthValidateRequest.prototype.getTrainingDataLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.training_daemon.AuthValidateRequest} returns this
 */
proto.training_daemon.AuthValidateRequest.prototype.setTrainingDataLink = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.training_daemon.UploadAndValidateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.training_daemon.UploadAndValidateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.training_daemon.UploadAndValidateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.UploadAndValidateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorization: (f = msg.getAuthorization()) && proto.training_daemon.AuthorizationDetails.toObject(includeInstance, f),
    uploadInput: (f = msg.getUploadInput()) && training_v2_pb.UploadInput.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.training_daemon.UploadAndValidateRequest}
 */
proto.training_daemon.UploadAndValidateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.training_daemon.UploadAndValidateRequest;
  return proto.training_daemon.UploadAndValidateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.training_daemon.UploadAndValidateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.training_daemon.UploadAndValidateRequest}
 */
proto.training_daemon.UploadAndValidateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.training_daemon.AuthorizationDetails;
      reader.readMessage(value,proto.training_daemon.AuthorizationDetails.deserializeBinaryFromReader);
      msg.setAuthorization(value);
      break;
    case 2:
      var value = new training_v2_pb.UploadInput;
      reader.readMessage(value,training_v2_pb.UploadInput.deserializeBinaryFromReader);
      msg.setUploadInput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.training_daemon.UploadAndValidateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.training_daemon.UploadAndValidateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.training_daemon.UploadAndValidateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.UploadAndValidateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorization();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.training_daemon.AuthorizationDetails.serializeBinaryToWriter
    );
  }
  f = message.getUploadInput();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      training_v2_pb.UploadInput.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthorizationDetails authorization = 1;
 * @return {?proto.training_daemon.AuthorizationDetails}
 */
proto.training_daemon.UploadAndValidateRequest.prototype.getAuthorization = function() {
  return /** @type{?proto.training_daemon.AuthorizationDetails} */ (
    jspb.Message.getWrapperField(this, proto.training_daemon.AuthorizationDetails, 1));
};


/**
 * @param {?proto.training_daemon.AuthorizationDetails|undefined} value
 * @return {!proto.training_daemon.UploadAndValidateRequest} returns this
*/
proto.training_daemon.UploadAndValidateRequest.prototype.setAuthorization = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.training_daemon.UploadAndValidateRequest} returns this
 */
proto.training_daemon.UploadAndValidateRequest.prototype.clearAuthorization = function() {
  return this.setAuthorization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.training_daemon.UploadAndValidateRequest.prototype.hasAuthorization = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional trainingV2.UploadInput upload_input = 2;
 * @return {?proto.trainingV2.UploadInput}
 */
proto.training_daemon.UploadAndValidateRequest.prototype.getUploadInput = function() {
  return /** @type{?proto.trainingV2.UploadInput} */ (
    jspb.Message.getWrapperField(this, training_v2_pb.UploadInput, 2));
};


/**
 * @param {?proto.trainingV2.UploadInput|undefined} value
 * @return {!proto.training_daemon.UploadAndValidateRequest} returns this
*/
proto.training_daemon.UploadAndValidateRequest.prototype.setUploadInput = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.training_daemon.UploadAndValidateRequest} returns this
 */
proto.training_daemon.UploadAndValidateRequest.prototype.clearUploadInput = function() {
  return this.setUploadInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.training_daemon.UploadAndValidateRequest.prototype.hasUploadInput = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.training_daemon.CommonRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.training_daemon.CommonRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.training_daemon.CommonRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.CommonRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorization: (f = msg.getAuthorization()) && proto.training_daemon.AuthorizationDetails.toObject(includeInstance, f),
    modelId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.training_daemon.CommonRequest}
 */
proto.training_daemon.CommonRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.training_daemon.CommonRequest;
  return proto.training_daemon.CommonRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.training_daemon.CommonRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.training_daemon.CommonRequest}
 */
proto.training_daemon.CommonRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.training_daemon.AuthorizationDetails;
      reader.readMessage(value,proto.training_daemon.AuthorizationDetails.deserializeBinaryFromReader);
      msg.setAuthorization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.training_daemon.CommonRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.training_daemon.CommonRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.training_daemon.CommonRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.CommonRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorization();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.training_daemon.AuthorizationDetails.serializeBinaryToWriter
    );
  }
  f = message.getModelId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional AuthorizationDetails authorization = 1;
 * @return {?proto.training_daemon.AuthorizationDetails}
 */
proto.training_daemon.CommonRequest.prototype.getAuthorization = function() {
  return /** @type{?proto.training_daemon.AuthorizationDetails} */ (
    jspb.Message.getWrapperField(this, proto.training_daemon.AuthorizationDetails, 1));
};


/**
 * @param {?proto.training_daemon.AuthorizationDetails|undefined} value
 * @return {!proto.training_daemon.CommonRequest} returns this
*/
proto.training_daemon.CommonRequest.prototype.setAuthorization = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.training_daemon.CommonRequest} returns this
 */
proto.training_daemon.CommonRequest.prototype.clearAuthorization = function() {
  return this.setAuthorization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.training_daemon.CommonRequest.prototype.hasAuthorization = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string model_id = 2;
 * @return {string}
 */
proto.training_daemon.CommonRequest.prototype.getModelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.training_daemon.CommonRequest} returns this
 */
proto.training_daemon.CommonRequest.prototype.setModelId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.training_daemon.UpdateModelRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.training_daemon.UpdateModelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.training_daemon.UpdateModelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.training_daemon.UpdateModelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.UpdateModelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorization: (f = msg.getAuthorization()) && proto.training_daemon.AuthorizationDetails.toObject(includeInstance, f),
    modelId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    modelName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    addressListList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.training_daemon.UpdateModelRequest}
 */
proto.training_daemon.UpdateModelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.training_daemon.UpdateModelRequest;
  return proto.training_daemon.UpdateModelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.training_daemon.UpdateModelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.training_daemon.UpdateModelRequest}
 */
proto.training_daemon.UpdateModelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.training_daemon.AuthorizationDetails;
      reader.readMessage(value,proto.training_daemon.AuthorizationDetails.deserializeBinaryFromReader);
      msg.setAuthorization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addAddressList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.training_daemon.UpdateModelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.training_daemon.UpdateModelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.training_daemon.UpdateModelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.UpdateModelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorization();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.training_daemon.AuthorizationDetails.serializeBinaryToWriter
    );
  }
  f = message.getModelId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getModelName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAddressListList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional AuthorizationDetails authorization = 1;
 * @return {?proto.training_daemon.AuthorizationDetails}
 */
proto.training_daemon.UpdateModelRequest.prototype.getAuthorization = function() {
  return /** @type{?proto.training_daemon.AuthorizationDetails} */ (
    jspb.Message.getWrapperField(this, proto.training_daemon.AuthorizationDetails, 1));
};


/**
 * @param {?proto.training_daemon.AuthorizationDetails|undefined} value
 * @return {!proto.training_daemon.UpdateModelRequest} returns this
*/
proto.training_daemon.UpdateModelRequest.prototype.setAuthorization = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.training_daemon.UpdateModelRequest} returns this
 */
proto.training_daemon.UpdateModelRequest.prototype.clearAuthorization = function() {
  return this.setAuthorization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.training_daemon.UpdateModelRequest.prototype.hasAuthorization = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string model_id = 2;
 * @return {string}
 */
proto.training_daemon.UpdateModelRequest.prototype.getModelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.training_daemon.UpdateModelRequest} returns this
 */
proto.training_daemon.UpdateModelRequest.prototype.setModelId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string model_name = 3;
 * @return {string}
 */
proto.training_daemon.UpdateModelRequest.prototype.getModelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.training_daemon.UpdateModelRequest} returns this
 */
proto.training_daemon.UpdateModelRequest.prototype.setModelName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.training_daemon.UpdateModelRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.training_daemon.UpdateModelRequest} returns this
 */
proto.training_daemon.UpdateModelRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string address_list = 5;
 * @return {!Array<string>}
 */
proto.training_daemon.UpdateModelRequest.prototype.getAddressListList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.training_daemon.UpdateModelRequest} returns this
 */
proto.training_daemon.UpdateModelRequest.prototype.setAddressListList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.training_daemon.UpdateModelRequest} returns this
 */
proto.training_daemon.UpdateModelRequest.prototype.addAddressList = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.training_daemon.UpdateModelRequest} returns this
 */
proto.training_daemon.UpdateModelRequest.prototype.clearAddressListList = function() {
  return this.setAddressListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.training_daemon.ModelsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.training_daemon.ModelsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.training_daemon.ModelsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.training_daemon.ModelsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.ModelsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listOfModelsList: jspb.Message.toObjectList(msg.getListOfModelsList(),
    training_v2_pb.ModelResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.training_daemon.ModelsResponse}
 */
proto.training_daemon.ModelsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.training_daemon.ModelsResponse;
  return proto.training_daemon.ModelsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.training_daemon.ModelsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.training_daemon.ModelsResponse}
 */
proto.training_daemon.ModelsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new training_v2_pb.ModelResponse;
      reader.readMessage(value,training_v2_pb.ModelResponse.deserializeBinaryFromReader);
      msg.addListOfModels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.training_daemon.ModelsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.training_daemon.ModelsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.training_daemon.ModelsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.ModelsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListOfModelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      training_v2_pb.ModelResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated trainingV2.ModelResponse list_of_models = 1;
 * @return {!Array<!proto.trainingV2.ModelResponse>}
 */
proto.training_daemon.ModelsResponse.prototype.getListOfModelsList = function() {
  return /** @type{!Array<!proto.trainingV2.ModelResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, training_v2_pb.ModelResponse, 1));
};


/**
 * @param {!Array<!proto.trainingV2.ModelResponse>} value
 * @return {!proto.training_daemon.ModelsResponse} returns this
*/
proto.training_daemon.ModelsResponse.prototype.setListOfModelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.trainingV2.ModelResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.trainingV2.ModelResponse}
 */
proto.training_daemon.ModelsResponse.prototype.addListOfModels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.trainingV2.ModelResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.training_daemon.ModelsResponse} returns this
 */
proto.training_daemon.ModelsResponse.prototype.clearListOfModelsList = function() {
  return this.setListOfModelsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.training_daemon.MethodMetadataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.training_daemon.MethodMetadataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.training_daemon.MethodMetadataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.MethodMetadataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    grpcMethodName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    grpcServiceName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.training_daemon.MethodMetadataRequest}
 */
proto.training_daemon.MethodMetadataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.training_daemon.MethodMetadataRequest;
  return proto.training_daemon.MethodMetadataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.training_daemon.MethodMetadataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.training_daemon.MethodMetadataRequest}
 */
proto.training_daemon.MethodMetadataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGrpcMethodName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGrpcServiceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.training_daemon.MethodMetadataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.training_daemon.MethodMetadataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.training_daemon.MethodMetadataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.MethodMetadataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGrpcMethodName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGrpcServiceName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string model_id = 1;
 * @return {string}
 */
proto.training_daemon.MethodMetadataRequest.prototype.getModelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.training_daemon.MethodMetadataRequest} returns this
 */
proto.training_daemon.MethodMetadataRequest.prototype.setModelId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string grpc_method_name = 2;
 * @return {string}
 */
proto.training_daemon.MethodMetadataRequest.prototype.getGrpcMethodName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.training_daemon.MethodMetadataRequest} returns this
 */
proto.training_daemon.MethodMetadataRequest.prototype.setGrpcMethodName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string grpc_service_name = 3;
 * @return {string}
 */
proto.training_daemon.MethodMetadataRequest.prototype.getGrpcServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.training_daemon.MethodMetadataRequest} returns this
 */
proto.training_daemon.MethodMetadataRequest.prototype.setGrpcServiceName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.training_daemon.AllModelsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.training_daemon.AllModelsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.training_daemon.AllModelsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.AllModelsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorization: (f = msg.getAuthorization()) && proto.training_daemon.AuthorizationDetails.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    isPublic: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 5, 0),
    page: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.training_daemon.AllModelsRequest}
 */
proto.training_daemon.AllModelsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.training_daemon.AllModelsRequest;
  return proto.training_daemon.AllModelsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.training_daemon.AllModelsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.training_daemon.AllModelsRequest}
 */
proto.training_daemon.AllModelsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.training_daemon.AuthorizationDetails;
      reader.readMessage(value,proto.training_daemon.AuthorizationDetails.deserializeBinaryFromReader);
      msg.setAuthorization(value);
      break;
    case 2:
      var value = /** @type {!proto.trainingV2.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPublic(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPageSize(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.training_daemon.AllModelsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.training_daemon.AllModelsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.training_daemon.AllModelsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.AllModelsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorization();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.training_daemon.AuthorizationDetails.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getIsPublic();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
};


/**
 * optional AuthorizationDetails authorization = 1;
 * @return {?proto.training_daemon.AuthorizationDetails}
 */
proto.training_daemon.AllModelsRequest.prototype.getAuthorization = function() {
  return /** @type{?proto.training_daemon.AuthorizationDetails} */ (
    jspb.Message.getWrapperField(this, proto.training_daemon.AuthorizationDetails, 1));
};


/**
 * @param {?proto.training_daemon.AuthorizationDetails|undefined} value
 * @return {!proto.training_daemon.AllModelsRequest} returns this
*/
proto.training_daemon.AllModelsRequest.prototype.setAuthorization = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.training_daemon.AllModelsRequest} returns this
 */
proto.training_daemon.AllModelsRequest.prototype.clearAuthorization = function() {
  return this.setAuthorization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.training_daemon.AllModelsRequest.prototype.hasAuthorization = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional trainingV2.Status status = 2;
 * @return {!proto.trainingV2.Status}
 */
proto.training_daemon.AllModelsRequest.prototype.getStatus = function() {
  return /** @type {!proto.trainingV2.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.trainingV2.Status} value
 * @return {!proto.training_daemon.AllModelsRequest} returns this
 */
proto.training_daemon.AllModelsRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool is_public = 3;
 * @return {boolean}
 */
proto.training_daemon.AllModelsRequest.prototype.getIsPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.training_daemon.AllModelsRequest} returns this
 */
proto.training_daemon.AllModelsRequest.prototype.setIsPublic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.training_daemon.AllModelsRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.training_daemon.AllModelsRequest} returns this
 */
proto.training_daemon.AllModelsRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 page_size = 5;
 * @return {number}
 */
proto.training_daemon.AllModelsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.training_daemon.AllModelsRequest} returns this
 */
proto.training_daemon.AllModelsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 page = 6;
 * @return {number}
 */
proto.training_daemon.AllModelsRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.training_daemon.AllModelsRequest} returns this
 */
proto.training_daemon.AllModelsRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.training_daemon.TrainingMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.training_daemon.TrainingMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.training_daemon.TrainingMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.TrainingMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    trainingenabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    traininginproto: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    trainingmethodsMap: (f = msg.getTrainingmethodsMap()) ? f.toObject(includeInstance, proto.google.protobuf.ListValue.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.training_daemon.TrainingMetadata}
 */
proto.training_daemon.TrainingMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.training_daemon.TrainingMetadata;
  return proto.training_daemon.TrainingMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.training_daemon.TrainingMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.training_daemon.TrainingMetadata}
 */
proto.training_daemon.TrainingMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTrainingenabled(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTraininginproto(value);
      break;
    case 3:
      var value = msg.getTrainingmethodsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.ListValue.deserializeBinaryFromReader, "", new proto.google.protobuf.ListValue());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.training_daemon.TrainingMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.training_daemon.TrainingMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.training_daemon.TrainingMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.TrainingMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrainingenabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getTraininginproto();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getTrainingmethodsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.ListValue.serializeBinaryToWriter);
  }
};


/**
 * optional bool trainingEnabled = 1;
 * @return {boolean}
 */
proto.training_daemon.TrainingMetadata.prototype.getTrainingenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.training_daemon.TrainingMetadata} returns this
 */
proto.training_daemon.TrainingMetadata.prototype.setTrainingenabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool trainingInProto = 2;
 * @return {boolean}
 */
proto.training_daemon.TrainingMetadata.prototype.getTraininginproto = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.training_daemon.TrainingMetadata} returns this
 */
proto.training_daemon.TrainingMetadata.prototype.setTraininginproto = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * map<string, google.protobuf.ListValue> trainingMethods = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.ListValue>}
 */
proto.training_daemon.TrainingMetadata.prototype.getTrainingmethodsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.ListValue>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.google.protobuf.ListValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.training_daemon.TrainingMetadata} returns this
 */
proto.training_daemon.TrainingMetadata.prototype.clearTrainingmethodsMap = function() {
  this.getTrainingmethodsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.training_daemon.MethodMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.training_daemon.MethodMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.training_daemon.MethodMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.MethodMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultModelId: jspb.Message.getFieldWithDefault(msg, 50001, ""),
    maxModelsPerUser: jspb.Message.getFieldWithDefault(msg, 50002, 0),
    datasetMaxSizeMb: jspb.Message.getFieldWithDefault(msg, 50003, 0),
    datasetMaxCountFiles: jspb.Message.getFieldWithDefault(msg, 50004, 0),
    datasetMaxSizeSingleFileMb: jspb.Message.getFieldWithDefault(msg, 50005, 0),
    datasetFilesType: jspb.Message.getFieldWithDefault(msg, 50006, ""),
    datasetType: jspb.Message.getFieldWithDefault(msg, 50007, ""),
    datasetDescription: jspb.Message.getFieldWithDefault(msg, 50008, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.training_daemon.MethodMetadata}
 */
proto.training_daemon.MethodMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.training_daemon.MethodMetadata;
  return proto.training_daemon.MethodMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.training_daemon.MethodMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.training_daemon.MethodMetadata}
 */
proto.training_daemon.MethodMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 50001:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultModelId(value);
      break;
    case 50002:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxModelsPerUser(value);
      break;
    case 50003:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDatasetMaxSizeMb(value);
      break;
    case 50004:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDatasetMaxCountFiles(value);
      break;
    case 50005:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDatasetMaxSizeSingleFileMb(value);
      break;
    case 50006:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasetFilesType(value);
      break;
    case 50007:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasetType(value);
      break;
    case 50008:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasetDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.training_daemon.MethodMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.training_daemon.MethodMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.training_daemon.MethodMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.training_daemon.MethodMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultModelId();
  if (f.length > 0) {
    writer.writeString(
      50001,
      f
    );
  }
  f = message.getMaxModelsPerUser();
  if (f !== 0) {
    writer.writeUint64(
      50002,
      f
    );
  }
  f = message.getDatasetMaxSizeMb();
  if (f !== 0) {
    writer.writeUint64(
      50003,
      f
    );
  }
  f = message.getDatasetMaxCountFiles();
  if (f !== 0) {
    writer.writeUint64(
      50004,
      f
    );
  }
  f = message.getDatasetMaxSizeSingleFileMb();
  if (f !== 0) {
    writer.writeUint64(
      50005,
      f
    );
  }
  f = message.getDatasetFilesType();
  if (f.length > 0) {
    writer.writeString(
      50006,
      f
    );
  }
  f = message.getDatasetType();
  if (f.length > 0) {
    writer.writeString(
      50007,
      f
    );
  }
  f = message.getDatasetDescription();
  if (f.length > 0) {
    writer.writeString(
      50008,
      f
    );
  }
};


/**
 * optional string default_model_id = 50001;
 * @return {string}
 */
proto.training_daemon.MethodMetadata.prototype.getDefaultModelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50001, ""));
};


/**
 * @param {string} value
 * @return {!proto.training_daemon.MethodMetadata} returns this
 */
proto.training_daemon.MethodMetadata.prototype.setDefaultModelId = function(value) {
  return jspb.Message.setProto3StringField(this, 50001, value);
};


/**
 * optional uint64 max_models_per_user = 50002;
 * @return {number}
 */
proto.training_daemon.MethodMetadata.prototype.getMaxModelsPerUser = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 50002, 0));
};


/**
 * @param {number} value
 * @return {!proto.training_daemon.MethodMetadata} returns this
 */
proto.training_daemon.MethodMetadata.prototype.setMaxModelsPerUser = function(value) {
  return jspb.Message.setProto3IntField(this, 50002, value);
};


/**
 * optional uint64 dataset_max_size_mb = 50003;
 * @return {number}
 */
proto.training_daemon.MethodMetadata.prototype.getDatasetMaxSizeMb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 50003, 0));
};


/**
 * @param {number} value
 * @return {!proto.training_daemon.MethodMetadata} returns this
 */
proto.training_daemon.MethodMetadata.prototype.setDatasetMaxSizeMb = function(value) {
  return jspb.Message.setProto3IntField(this, 50003, value);
};


/**
 * optional uint64 dataset_max_count_files = 50004;
 * @return {number}
 */
proto.training_daemon.MethodMetadata.prototype.getDatasetMaxCountFiles = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 50004, 0));
};


/**
 * @param {number} value
 * @return {!proto.training_daemon.MethodMetadata} returns this
 */
proto.training_daemon.MethodMetadata.prototype.setDatasetMaxCountFiles = function(value) {
  return jspb.Message.setProto3IntField(this, 50004, value);
};


/**
 * optional uint64 dataset_max_size_single_file_mb = 50005;
 * @return {number}
 */
proto.training_daemon.MethodMetadata.prototype.getDatasetMaxSizeSingleFileMb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 50005, 0));
};


/**
 * @param {number} value
 * @return {!proto.training_daemon.MethodMetadata} returns this
 */
proto.training_daemon.MethodMetadata.prototype.setDatasetMaxSizeSingleFileMb = function(value) {
  return jspb.Message.setProto3IntField(this, 50005, value);
};


/**
 * optional string dataset_files_type = 50006;
 * @return {string}
 */
proto.training_daemon.MethodMetadata.prototype.getDatasetFilesType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50006, ""));
};


/**
 * @param {string} value
 * @return {!proto.training_daemon.MethodMetadata} returns this
 */
proto.training_daemon.MethodMetadata.prototype.setDatasetFilesType = function(value) {
  return jspb.Message.setProto3StringField(this, 50006, value);
};


/**
 * optional string dataset_type = 50007;
 * @return {string}
 */
proto.training_daemon.MethodMetadata.prototype.getDatasetType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50007, ""));
};


/**
 * @param {string} value
 * @return {!proto.training_daemon.MethodMetadata} returns this
 */
proto.training_daemon.MethodMetadata.prototype.setDatasetType = function(value) {
  return jspb.Message.setProto3StringField(this, 50007, value);
};


/**
 * optional string dataset_description = 50008;
 * @return {string}
 */
proto.training_daemon.MethodMetadata.prototype.getDatasetDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50008, ""));
};


/**
 * @param {string} value
 * @return {!proto.training_daemon.MethodMetadata} returns this
 */
proto.training_daemon.MethodMetadata.prototype.setDatasetDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 50008, value);
};


goog.object.extend(exports, proto.training_daemon);
